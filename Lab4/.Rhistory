y
x=rnorm(100)
> hist(x)
> data(iris)
> summary(iris)
x=rnorm(100)
> hist(x)
> data(iris)
> summary(iris)
x=rnorm(100)
hist(x)
data("iris")
summary(iris)
.libPaths()
library(e1071)
detach("package:e1071", unload = TRUE)
install.packages("e1071")
getwd()
cost <-read.csv("D:/0.University/3.Nam 3/HK2/11.PT Kinh Doanh/4.Bai_Tap/Lab1/Purchase Orders.csv")
cost <-read.csv("D:/0.University/3.Nam 3/HK2/11.PT Kinh Doanh/4.Bai_Tap/Lab1/Purchase Orders.csv", header = TRUE'')
View(cost)
cost <-read.csv("D:/0.University/3.Nam 3/HK2/11.PT Kinh Doanh/4.Bai_Tap/Lab1/Purchase Orders.csv", header = TRUE)
cost
attach(cost)
length(Cost per order)
cost()
cost
length(Cost per order)
lenght(cost)
length(Cost per order)
length(Cost)
length(cost)
length(cost per order())
length(cost per order)
length(Quantity)
attach(cost)
cost <-read.csv("D:/0.University/3.Nam 3/HK2/11.PT Kinh Doanh/4.Bai_Tap/Lab1/Purchase Orders.csv", header = TRUE)
cost
attach(cost)
length(Cost per order)
length("Cost per order")
cost <-read.csv("D:/0.University/3.Nam 3/HK2/11.PT Kinh Doanh/4.Bai_Tap/Lab1/Purchase Orders.csv", header = TRUE)
attach(cost)
cost
length(Cost.per.order)
length(Cost.per.order)
min(Cost.per.order)
max(Cost.per.order)
Mean(Cost.per.order)
mean(Cost.per.order)
median(Cost.per.order)
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
getmode(Cost.per.order)
range <- max(Cost.per.order) - min(Cost.per.order)
range
var(Cost.per.order)
sd(Cost.per.order)
cv <- sd(Cost.per.order)/ mean(Cost.per.order)
cv
library(e1071)
require(e1071)
install.packages("e1071")
require(e1071)
skewness(Cost.per.order)
skewness(Cost.per.order)
skewness(Cost.per.order, type=2)
kurtosis(Cost.per.order)
kurtosis(Cost.per.order, type =2)
quantile(Cost.per.order, 0.25)
quantile(Cost.per.order, 0.5)
quantile(Cost.per.order, 0.75)
quantile(Cost.per.order, 0.1)
boxplot(Cost.per.order, main = "Box Plot", ylab = "USD", col = "lightgray")
hist(Cost.per.order, main = "Bieu Do Histogram", ylab = "USD", col = " lightgray")
hist(Cost.per.order, main = "Histogram Diagram", ylab = "USD", col = " lightgray")
IQR <-quantile(Cost.per.order,0.75) - quantile(Cost.per.order, 0.25)
IQR
gdp <-read.csv("D:/0.University/3.Nam 3/HK2/11.PT Kinh Doanh/4.Bai_Tap/Lab1/GDP_VN_An_2000_2022.csv", header=True)
gdp <-read.csv("D:/0.University/3.Nam 3/HK2/11.PT Kinh Doanh/4.Bai_Tap/Lab1/GDP_VN_An_2000_2022.csv", header=TRUE)
gdp
attach(gdp)
require(e1071)
skewness(GDP)
kurtosis(GDP)
skewness(GDP, type =2)
kurtosis(GDP, type =2)
skewness(GDP, type =1)
kurtosis(GDP, type =1)
cost <-read.csv("D:/0.University/3.Nam 3/HK2/11.PT Kinh Doanh/4.Bai_Tap/Lab1/Computer Repair Times.csv", header = TRUE)
rp <-read.csv("D:/0.University/3.Nam 3/HK2/11.PT Kinh Doanh/4.Bai_Tap/Lab1/Computer Repair Times.csv", header = TRUE)
rp
rpt <-read.csv("D:/0.University/3.Nam 3/HK2/11.PT Kinh Doanh/4.Bai_Tap/Lab1/Computer Repair Times.csv", header = TRUE)
rpt
attach(rpt)
length(rpt)
length(RPT)
min(RPT)
max(RPT)
mean(RPT)
median(RPT)
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
getmode(RPT)
> range <- max(RPT) - min(RPT)
> range
range <- max(RPT) - min(RPT)
range
var(RPT)
sd(RPT)
cv <- sd(RPT)/ mean(RPT)
cv
skewness(RPT, type=2)
req''
require(e1071)
skewness(RPT, type=2)
kurtosis(RPT, type =2)
quantile(RPT, 0.25)
quantile(RPT, 0.5)
quantile(RPT, 0.75)
quantile(RPT, 0.1)
IQR <- quantile(RPT, 0.75)- quantile(RPT, 0.25)
IQR <- quantile(RPT, 0.75)- quantile(RPT, 0.25)
IQR <- quantile(RPT, 0.75)- quantile(RPT, 0.25)
IQR
boxplot(Cost.per.order, main = "Box Plot", ylab = "USD", col = "lightgray")
boxplot(RPT, main = "Box Plot", ylab = " Days", col = "lightgray")
hist(RPT, main = " Histogram Diagram ", ylab = " Days", col = "lightgray")
gdp <- read.csv("D:/0.University/3.Nam 3/HK2/11.PT Kinh Doanh/4.Bai_Tap/Lab1/GDP_VN_An_2000_2022.csv", header=TRUE)
gdp
attach(gdp)
length(GDP)
min(GDP)
var(GDP)
require(e1071)
skewness(GDP, type=2)
kurtosis(GDP, type =2)
boxplot(GDP, main = "Box Plot", ylab = "USD", col = "lightgray")
hist(GDP, main = "Histogram Diagram", ylab = "Freq", col = " lightgray")
hist(GDP, main = "Histogram Diagram", ylab = "USD", col = " lightgray")
is<- read.csv("D:/0.University/3.Nam 3/HK2/11.PT Kinh Doanh/4.Bai_Tap/Lab2/Insurance Survey_CSV.csv", header ="TRUE");
is<-read.csv("D:/0.University/3.Nam 3/HK2/11.PT Kinh Doanh/4.Bai_Tap/Lab2/Insurance Survey_CSV.csv",header ="TRUE");
is<-read.csv("D:/0.University/3.Nam 3/HK2/11.PT Kinh Doanh/4.Bai_Tap/Lab2/Insurance Survey_CSV.csv", header=TRUE);
attach(is)
is
require(car)
install.packages("car")
require(car)
leveneTest("Satisfaction.","Education",center=mean)
leveneTest("Satisfaction.","Education",center="mean")
leveneTest(Satisfaction.,Education,center="mean")
is(p=0.95,2,21)
aov(Satisfaction.~Education,data=is)
rs = aov(Satisfaction.~Education,data=is)
summary(rs)
df(p=0.95,2,21)
qf(p=0.05,2,21,lower.tail=FALSE)
qf(p=0.95,2,21)
TukeyHSD(rs)
en<-read.csv("D:/0.University/3.Nam 3/HK2/11.PT Kinh Doanh/4.Bai_Tap/Lab2/EnergyCSV.csv", header ="TRUE");
is<-read.csv("D:/0.University/3.Nam 3/HK2/11.PT Kinh Doanh/4.Bai_Tap/Lab2/EnergyCSV.csv", header=TRUE);
en<-read.csv("D:/0.University/3.Nam 3/HK2/11.PT Kinh Doanh/4.Bai_Tap/Lab2/EnergyCSV.csv", header=TRUE);
attach(en)
en
attach(en)
install.packages("MASS")
require(MASS)
attach(en)
en
tb=table(Gender,Brand.Preference)
tb
install.packages("dplyr")
df<-read.csv(choose.files())
setwd("D:/0.University/3.Nam 3/HK2/11.PT Kinh Doanh/4.Bai_Tap/Lab4")
vn <- read.csv("Lab4VietNam.csv", header = TRUE)
vn
str(vn)
vn$Date <- as.Date(vn$Date,"%d/%m/%Y")
str(vn)
vn
vn$Date <- as.Date(vn$Date,"%d-%m-%Y")
str(vn)
View(vn)
View(vn)
View(vn)
vn
vn <- read.csv("Lab4VietNam.csv", header = TRUE)
vn
vn$Date <- as.Date(vn$Date,"%m/%d/%Y")
str(vn)
vn
vn <- read.csv("Lab4VietNam.csv", header = TRUE)
rownames(vn) <-vn$Date
vn
view(vn)
View(vn)
class(vn)
exporttime <- ts(vn$Date, frequency = 1, start = min(vn$Date))
exporttime <- ts(vn$Date, frequency = 1, start = min(vn$Date), end=max(vn$Date))
exporttime <- ts(vn$Date, frequency = 1, start = (2021,07,01)
exporttime <- ts(vn$Date, frequency = 1, start = (2021,07,01))
exporttime <- ts(vn$Date, frequency = 1, start(2021,07,01))
plot(data)
exporttime <- ts(vn$Date, frequency = 1, start(2021,01,07))
plot(data)
vn
exporttime <- ts(vn$Date, frequency = 1, start(21,01,07))
plot(data)
class(exporttime)
plot(exporttime )
plot(exporttime)
exporttime <- ts(vn$Date, frequency = 1, start(21,01,07))
plot(exporttime)
exporttime <- ts(vn$Date, frequency = 1, start(21,07,01))
plot(exporttime)
exporttime <- ts(vn$Date, frequency = 1, start(2021,07,01))
plot(exporttime)
exporttime <- ts(vn$Date, frequency = 1, start(2021,01,07))
plot(exporttime)
df<-read.csv(choose.files())
df
df<-read.csv(choose.files())
df
vn<-read.csv(choose.files())
vn
rownames(vn)<-vn$Date
data<-ts(vn$Weekly.Exports.CMY, frequency = 1, start(2021,7,1))
plot(data)
data<-ts(vn$Weekly.Exports.CMY, frequency = 1, start(2021,1,7))
plot(data)
install.packages("tseries")
require('tseries')
install.packages("forecast")
require('forecast')
data<-ts(vn$Weekly.Exports.CMY, frequency = 1, start(2021,1,7))
plot(data)
vnmodel=auto.arima(data,ic="aic",trace = TRUE)
vnmodel
adf.test(data)
model = auto.arima(vn$Weekly.Exports.CMY)
model
vn<-read.csv(choose.files())
rownames(vn)<-vn$Date
data<-ts(df$Births, frequency = 7, start(2021,1,7))
data<-ts(vn$Weekly.Exports.CMY, frequency = 7, start(2021,1,7))
plot(data)
vnmodel=auto.arima(vn$Weekly.Exports.CMY)
vnmodel
vn<-read.csv(choose.files())
rownames(vn)<-vn$Date
data<-ts(vn$Weekly.Exports.CMY, frequency = 1, start(2021,1,1))
plot(data)
adf.test(vn$Weekly.Exports.CMY)
model = auto.arima(vn$Weekly.Exports.CMY)
model
vn<-read.csv(choose.files())
vn
rownames(vn)<-vn$Date
model = auto.arima(vn$Weekly.Exports.CMY)
model
adf.test(vn$Weekly.Exports.CMY)
data<-ts(vn$Weekly.Exports.CMY, frequency = 7, start(2021,1,1))
plot(data)
adf.test(data)
data1 <- diff(data,differences = 1)
adf.test(data1)
pacf(data1)
Acf(data1)
vn<-read.csv(choose.files())
rownames(vn)<-vn$Weekly.Exports.CMY
vndata<-ts(vn$Weekly.Exports.CMY, frequency = 7, start(2021,1,1))
plot(vndata)
install.packages("tseries")
install.packages("tseries")
require('tseries')
install.packages("forecast")
require('forecast')
adf.test(vndata)
vndata1<-diff(vndata,differences = 1)
adf.test(vndata1)
Pacf(vndata1)
#p=0
Acf(vndata1)
Acf(vndata1)
Pacf(vndata1)
Acf(vndata1)
Pacf(vndata1)
model = auto.arima(vndata)
model
Pacf(vndata1)
Pacf(vndata)
Pacf(vndata1)
train <-head(vn,37)
train
fitArimatrain <- arima(train['Weekly.Exports.CMY'], order =c(0,1,1))
predict <- forecast(fitArimatrain, 10)
predict
install.packages("Metrics")
require(Metrics)
test <- tail(vn,nrow(vn)-37)
test
rmse(test$Weekly.Exports.CMY, predict$predict)
rmse(test$Weekly.Exports.CMY, predict$)
plot(predict)
vnmodel=auto.arima(vndata, ic="aic", trace=TRUE)
fitArima <- arima(vn, order =c(0,1,1))
fitArima <- arima(vn$Weekly.Exports.CMY, order =c(0,1,1))
predict_2022 <- forecast(fitArima , 30)
predict_2022
plot(forecast(fitArima , 30))
myforecast <-forecast(mode, level=c(95),h=7*10)
myforecast <-forecast(model, level=c(95),h=7*10)
plot(myforecast)
Box.test(model$residuals, lag=15, type="Ljung-Box")
Box.test(model$residuals, lag=5, type="Ljung-Box")
Box.test(model$residuals, lag=20, type="Ljung-Box")
plot(vndata)
print(predict_2022)
